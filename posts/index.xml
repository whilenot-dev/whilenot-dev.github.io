<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on wh!le / blog</title><link>/posts/</link><description>Recent content in Posts on wh!le / blog</description><generator>Hugo -- gohugo.io</generator><copyright>@ Florian Gutzwiller</copyright><lastBuildDate>Tue, 14 Nov 2023 14:33:56 +0100</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>TypeScript source code generation</title><link>/posts/typescript-source-code-generation/</link><pubDate>Tue, 14 Nov 2023 14:33:56 +0100</pubDate><guid>/posts/typescript-source-code-generation/</guid><description>Generate valid TypeScript source code programmatically with a metaprogramming technique It&amp;rsquo;s about time for another blog post&amp;hellip; been a while! While I still owe it to myself to write the 2nd part of the previous blog post (does anybody have tips for shitty bugs?), I thought it would be time to write about a different topic - Metaprogramming as programming technique.
Sometimes writing source code can get a bit repetitive. Anytime I encounter such a feeling I reflect on my life and how I never wanted to do any assembly-line work, as I did in my childhood during the summer holidays, ever again.</description></item><item><title>Cool Bugs VS Shitty Bugs, Part 1: Cool Bugs</title><link>/posts/cool-bugs-vs-shitty-bugs-part-1/</link><pubDate>Sun, 10 Apr 2022 14:29:10 +0200</pubDate><guid>/posts/cool-bugs-vs-shitty-bugs-part-1/</guid><description>Streaming video via Motion JPEG and counting established TCP sockets - a declarative promise with a catch Recently I had to debug a problem in an Single Page Application (SPA) regarding Motion JPEG streams for one of my clients. I found this journey so interesting that I wanted to share it as my first blog post.
The post should give the reader an introduction on what it means to do frontend engineering nowadays.</description></item></channel></rss>