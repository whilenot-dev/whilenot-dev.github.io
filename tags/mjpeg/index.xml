<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mjpeg on wh!le / blog</title><link>https://blog.whilenot.dev/tags/mjpeg/</link><description>Recent content in mjpeg on wh!le / blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>@ Florian Gutzwiller</copyright><lastBuildDate>Sun, 10 Apr 2022 14:29:10 +0200</lastBuildDate><atom:link href="https://blog.whilenot.dev/tags/mjpeg/index.xml" rel="self" type="application/rss+xml"/><item><title>Cool Bugs VS Shitty Bugs, Part 1: Cool Bugs</title><link>https://blog.whilenot.dev/posts/cool-bugs-vs-shitty-bugs-part-1/</link><pubDate>Sun, 10 Apr 2022 14:29:10 +0200</pubDate><guid>https://blog.whilenot.dev/posts/cool-bugs-vs-shitty-bugs-part-1/</guid><description>Steaming video via Motion JPEG and counting established TCP sockets Recently I had to debug a problem in an SPA regarding Motion JPEG streams for one of my clients. I found this journey so interesting that I wanted to share it as my first blog post.
The post should give the reader an introduction on what it means to do frontend engineering nowadays. What follows is a post that touches on MJPEG streams, HTTP pushes, TCP sockets and their observability.</description></item></channel></rss>